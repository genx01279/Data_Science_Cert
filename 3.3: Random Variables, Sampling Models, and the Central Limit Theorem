# **Questions 1 and 2: SAT testing**
# The SAT is a standardized college admissions test used in the United States. The following two multi-part questions will ask you some questions about SAT testing.
# This is a 6-part question asking you to determine some probabilities of what happens when a student guessed for all of their answers on the SAT. Use the information below to inform your answers for the following questions.
# An old version of the SAT college entrance exam had a -0.25 point penalty for every incorrect answer and awarded 1 point for a correct answer. The quantitative test consisted of 44 multiple-choice questions each with 5 answer choices. Suppose a student chooses answers by guessing for all questions on the test.
library(tidyverse)
library(dplyr)
library(tidyr)
#Question 1a: What is the probability of guessing correctly for one question?
1/5
#Question 1b: What is the expected value of points for guessing on one question?
1*0.2+(-0.25)*(1-0.2)
#Question 1c: What is the expected score of guessing on all 44 questions?
avg <- 44*(1*0.2+(-0.25)*(1-0.2))
#Question 1d: What is the standard error of guessing on all 44 questions?
se <- sqrt(44) * abs(-0.25-1)*sqrt(0.2*0.8)
#Question 1e: Use the Central Limit Theorem to determine the probability that a guessing student scores 8 points or higher on the test.
1 - pnorm(8, avg, se)
# Question 1f: Set the seed to 21, then run a Monte Carlo simulation of 10,000 students guessing on the test.
set.seed(21, sample.kind = "Rounding")
B <- 10000
sample_score <- replicate(B, {
  sat_score <- sample(c(1,-0.25), 44, replace = TRUE, prob = c(0.2, 0.8))
  sum(sat_score)
})
mean(sample_score >=8)

#The SAT was recently changed to reduce the number of multiple choice options from 5 to 4 and also to eliminate the penalty for guessing.
# In this two-part question, you'll explore how that affected the expected values for the test.
right <- 1
wrong <- 0
p_right <- 1/4
p_wrong <- 3/4
# Question 2a: What is the expected value of the score when guessing on this new test?
new_avg <- 44*(right*p_right + wrong*p_wrong)
new_avg
# Question 2b: Consider a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) representing a range of student skills. What is the lowest p such that the probability of scoring over 35 exceeds 80%?
p <- seq(0.25, 0.95, 0.05)
new_sd <- sqrt(44) * abs(wrong - right) * sqrt(p_right*p_wrong)
g <- sapply(p, function(x){
  s_point <- (right*x) + (wrong*(1-x))
  n_avg <- 44* s_point
  n_sd <- sqrt(44) * abs(wrong - right) * sqrt(x*(1-x))
  1 - pnorm(35, n_avg, n_sd)
})
min(p[which(g>0.8)])


# **Question 3: Betting on Roulette**
# A casino offers a House Special bet on roulette, which is a bet on five pockets (00, 0, 1, 2, 3) out of 38 total pockets. The bet pays out 6 to 1. In other words, a losing bet yields -$1 and a successful bet yields $6. A gambler wants to know the chance of losing money if he places 500 bets on the roulette House Special.
# The following 7-part question asks you to do some calculations related to this scenario.
win <- 6
lose <- -1
p_win <- 5/38
n_bet <- 500
# Question 3a: What is the expected value of the payout for one bet?
one_bet <- (win*p_win) + (lose*(1-p_win))
one_bet
#Question 3b: What is the standard error of the payout for one bet?
se_one <- abs(lose - win) * sqrt(p_win*(1-p_win))
se_one
#Question 3c: What is the expected value of the average payout over 500 bets?
one_bet
#Question 3d: What is the standard error of the average payout over 500 bets?
sd_avg <- se_one/(sqrt(n_bet))
sd_avg
#Question 3e: What is the expected value of the sum of 500 bets?
m <- n_bet * one_bet
m
#Question 3f: What is the standard error of the sum of 500 bets?
se <- sqrt(n_bet) * se_one
se
#Question 3g: Use pnorm() with the expected value of the sum and standard error of the sum to calculate the probability of losing money over 500 bets.
pnorm(0, m, se)
